{"version":3,"sources":["App.js","useBookSearch.js","index.js"],"names":["App","useState","query","setQuery","pageNumber","setPageNumber","loading","setLoading","error","setError","books","setBooks","hasMore","setHasMore","useEffect","cancel","axios","method","url","params","q","page","cancelToken","CancelToken","c","then","res","prevBooks","Set","data","docs","map","b","title","length","catch","e","isCancel","useBookSearch","observer","useRef","lastBookElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","type","value","onChange","target","book","index","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAGe,SAASA,IACvB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,ECJc,SAAuBH,EAAOE,GAC5C,MAA8BH,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,oBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA8BV,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KA+BA,OA7BAC,qBAAU,WACTH,EAAS,MACP,CAACT,IAEJY,qBAAU,WAGT,IAAIC,EAmBJ,OArBAR,GAAW,GACXE,GAAS,GAETO,IAAM,CACLC,OAAQ,MACRC,IAAK,qCACLC,OAAQ,CAAEC,EAAGlB,EAAOmB,KAAMjB,GAC1BkB,YAAa,IAAIN,IAAMO,aAAY,SAAAC,GAAC,OAAIT,EAASS,OAC/CC,MAAK,SAAAC,GAEPf,GAAS,SAAAgB,GACR,OAAO,YAAI,IAAIC,IAAJ,sBAAYD,GAAZ,YAA0BD,EAAIG,KAAKC,KAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,gBAG/DpB,EAAWa,EAAIG,KAAKC,KAAKI,OAAS,GAClC3B,GAAW,MAET4B,OAAM,SAAAC,GACJpB,IAAMqB,SAASD,IACnB3B,GAAS,MAEH,kBAAMM,OAEX,CAACb,EAAOE,IACJ,CAAEE,UAASE,QAAOE,QAAOE,WD1B5B0B,CAAcpC,EAAOE,GAJxBM,EADD,EACCA,MACAE,EAFD,EAECA,QACAN,EAHD,EAGCA,QACAE,EAJD,EAICA,MAGK+B,EAAWC,mBACXC,EAAqBC,uBAC1B,SAACC,GAEIrC,IAEAiC,EAASK,SAASL,EAASK,QAAQC,aAGvCN,EAASK,QAAU,IAAIE,sBAAqB,SAACC,GACxCA,EAAQ,GAAGC,gBAAkBpC,GAEhCP,GAAc,SAAC4C,GAAD,OAAoBA,EAAiB,QAIjDN,GAAMJ,EAASK,QAAQM,QAAQP,MAEpC,CAACrC,EAASM,IAOX,OACC,qCACC,uBAAOuC,KAAK,OAAOC,MAAOlD,EAAOmD,SAPnC,SAAsBjB,GACrBjC,EAASiC,EAAEkB,OAAOF,OAClB/C,EAAc,MAMZK,EAAMqB,KAAI,SAACwB,EAAMC,GACjB,OAAI9C,EAAMwB,SAAWsB,EAAQ,EACrB,qBAAKC,IAAKhB,EAAV,SAA0Cc,GAAPA,GAEnC,8BAAiBA,GAAPA,MAGnB,8BAAMjD,GAAW,eACjB,8BAAME,GAAS,aE7ClBkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5D,EAAD,MAEF6D,SAASC,eAAe,W","file":"static/js/main.81173160.chunk.js","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport useBookSearch from './useBookSearch';\r\n\r\nexport default function App() {\r\n const [query, setQuery] = useState('')\r\n const [pageNumber, setPageNumber] = useState(1)\r\n\r\n const {\r\n  books,\r\n  hasMore,\r\n  loading,\r\n  error\r\n } = useBookSearch(query, pageNumber)\r\n\r\n const observer = useRef();\r\n const lastBookElementRef = useCallback(\r\n  (node) => {\r\n   // console.log(node);\r\n   if (loading) return;\r\n\r\n   if (observer.current) observer.current.disconnect();\r\n   /* disconnects our observer from previous element so that our new last element would be hooked up correctly */\r\n\r\n   observer.current = new IntersectionObserver((entries) => {\r\n    if (entries[0].isIntersecting && hasMore) {\r\n     // console.log(\"Visible\");\r\n     setPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n    }\r\n   });\r\n\r\n   if (node) observer.current.observe(node);\r\n  },\r\n  [loading, hasMore]\r\n );\r\n function handleSearch(e) {\r\n  setQuery(e.target.value)\r\n  setPageNumber(1)\r\n }\r\n\r\n return (\r\n  <>\r\n   <input type=\"text\" value={query} onChange={handleSearch}></input>\r\n   {books.map((book, index) => {\r\n    if (books.length === index + 1) {\r\n     return <div ref={lastBookElementRef} key={book}>{book}</div>\r\n    } else {\r\n     return <div key={book}>{book}</div>\r\n    }\r\n   })}\r\n   <div>{loading && 'Loading...'}</div>\r\n   <div>{error && 'Error'}</div>\r\n  </>\r\n )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useBookSearch(query, pageNumber) {\r\n const [loading, setLoading] = useState(true)\r\n const [error, setError] = useState(false)\r\n const [books, setBooks] = useState([])\r\n const [hasMore, setHasMore] = useState(false)\r\n\r\n useEffect(() => {\r\n  setBooks([])\r\n }, [query])\r\n\r\n useEffect(() => {\r\n  setLoading(true)\r\n  setError(false)\r\n  let cancel\r\n  axios({\r\n   method: 'GET',\r\n   url: 'http://openlibrary.org/search.json',\r\n   params: { q: query, page: pageNumber },\r\n   cancelToken: new axios.CancelToken(c => cancel = c)\r\n  }).then(res => {\r\n\r\n   setBooks(prevBooks => {\r\n    return [...new Set([...prevBooks, ...res.data.docs.map(b => b.title)])]\r\n   })\r\n\r\n   setHasMore(res.data.docs.length > 0)\r\n   setLoading(false)\r\n\r\n  }).catch(e => {\r\n   if (axios.isCancel(e)) return\r\n   setError(true)\r\n  })\r\n  return () => cancel()\r\n\r\n }, [query, pageNumber])\r\n return { loading, error, books, hasMore }\r\n\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}